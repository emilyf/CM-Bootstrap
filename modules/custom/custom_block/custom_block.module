<?php
/**
 * @file
 * Customizations for Blocks.
 */
 
module_load_include('inc', 'custom_block', 'blocks/front_pg_fv_carousel');
module_load_include('inc', 'custom_block', 'blocks/front_pg_ls_carousel');
module_load_include('inc', 'custom_block', 'blocks/cb_partners_list_view');
module_load_include('inc', 'custom_block', 'blocks/cb_custom_video_lists');
module_load_include('inc', 'custom_block', 'blocks/learn_videos_two_col');
module_load_include('inc', 'custom_block', 'blocks/cb_partner_carousels');
module_load_include('inc', 'custom_block', 'blocks/cb_archive_two_col');
module_load_include('inc', 'custom_block', 'blocks/cb_social_media_menu');
module_load_include('inc', 'custom_block', 'blocks/cb_video_grid');
module_load_include('inc', 'custom_block', 'blocks/cb_pd_p_carousel');
module_load_include('inc', 'custom_block', 'blocks/cb_pd_p_all_series');
module_load_include('inc', 'custom_block', 'blocks/cb_genres_carousels');
module_load_include('inc', 'custom_block', 'blocks/cb_genres_show_series_carousels');
module_load_include('inc', 'custom_block', 'blocks/cb_show_node_meta');
module_load_include('inc', 'custom_block', 'blocks/cb_show_air_dates');

/**
 * Implements hook_block_info().
 */
function custom_block_block_info() {  
  $blocks['front_pg_fv_carousel'] = array(
    'info' => t('Front Pg Featured Videos Carousel'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['front_pg_ls_carousel'] = array(
    'info' => t('Front Pg Latest Shows Carousel'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_partners_list'] = array(
    'info' => t('custom_block: cb_partners_list'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_custom_video_lists'] = array(
    'info' => t('custom_block: cb_custom_video_lists'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_custom_video_lists_front'] = array(
    'info' => t('custom_block: cb_custom_video_lists_front'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['learn_videos_two_col'] = array(
    'info' => t('custom_block: Learn Videos Two Columns'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_partner_carousels'] = array(
    'info' => t('custom_block: Partners Carousel'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_archive_two_col'] = array(
    'info' => t('custom_block: Archive Two Columns'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_social_media_menu'] = array(
    'info' => t('custom_block: Social Media Menu'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_social_media_menu_2'] = array(
    'info' => t('custom_block: Social Media Menu 2'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_video_grid'] = array(
    'info' => t('custom_block: Video Grid'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_pd_p_carousel'] = array(
    'info' => t('custom_block: Partner Detail Pg -- Partners Carousel [Show + Series]'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_pd_p_all_series'] = array(
    'info' => t('custom_block: Partner Detail Pg -- All Series Carousel'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_genres_carousels'] = array(
    'info' => t('custom_block: Genres Carousel'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_genres_show_series_carousels'] = array(
    'info' => t('custom_block: Genres Show Series Carousel'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_show_node_meta'] = array(
    'info' => t('custom_block: Show Node Meta Data'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_show_right_sidebar'] = array(
    'info' => t('custom_block: Show Right Sidebar'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  $blocks['cb_show_air_dates'] = array(
    'info' => t('custom_block: Show Air Dates'),
    'cache' => DRUPAL_NO_CACHE,
    'weight' => '0',
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function custom_block_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'front_pg_fv_carousel':
      $block['subject'] = t('Featured Videos');
      $block['content'] = _front_pg_featured_videos_carousel_data();
      break;
    case 'front_pg_ls_carousel':
      $block['subject'] = t('Latest Shows');
      $block['content'] = _front_pg_latest_shows_carousel_data();
      break;
    case 'cb_partners_list':
      //$block['subject'] = t('_cb_partners_list_view');
      $block['content'] = _cb_partners_list_view();
      break;
    case 'cb_custom_video_lists':
      //$block['subject'] = t('_cb_custom_video_lists');
      $block['content'] = _cb_custom_video_lists();
      break;
    case 'cb_custom_video_lists_front':
      //$block['subject'] = t('_cb_custom_video_lists');
      $block['content'] = _cb_custom_video_lists();
      break;
    case 'learn_videos_two_col':
      //$block['subject'] = t('Learn Videos Two Columns');
      $block['content'] = custom_block_learn_videos_two_col_data();
      break;
    case 'cb_partner_carousels':
      $block['content'] = _cb_partner_carousels_data();
      break;
    case 'cb_archive_two_col':
      $block['content'] = _cb_archive_two_col();
      break;
    case 'cb_social_media_menu':
      $block['content'] = _cb_social_media_menu();
      break;
    case 'cb_social_media_menu_2':
      $block['content'] = _cb_social_media_menu();
      break;
    case 'cb_video_grid':
      $block['content'] = _cb_video_grid();
      break;
    case 'cb_pd_p_carousel':
      $block['subject'] = t('Partner Detail Pg -- Partners Carousel [Show + Series]');
      $block['content'] = _cb_pd_p_carousel();
      break;
    case 'cb_pd_p_all_series':
      $block['subject'] = t('All Series');
      $block['content'] = _cb_pd_p_all_series();
      break;
    case 'cb_genres_carousels':
      //$block['subject'] = t('Genres Carousel');
      $block['content'] = _cb_genres_carousels();
      break;
    case 'cb_genres_show_series_carousels':
      //$block['subject'] = t('Genres: More Shows in This Series');
      $block['content'] = _cb_genres_show_series_carousels();
      break;
    case 'cb_show_node_meta':
      $block['content'] = _cb_show_node_meta();
      break;
    case 'cb_show_right_sidebar':
      $block['content'] = 'cb_show_right_sidebar';
      break;
    case 'cb_show_air_dates':
      $block['content'] = _cb_show_air_dates();
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function custom_block_theme($existing, $type, $theme, $path) {
	$theme = array();
	$theme['front_pg_featured_videos'] = array(
		'template' => 'front-pg-portfolio-list',
		'path' => $path . '/templates',
	);
	$theme['front_pg_fv_carousel'] = array(
		'template' => 'front-pg-fv-carousel',
		'path' => $path . '/templates',
	);
	// Latest Shows
	$theme['front_pg_ls_carousel'] = array(
		'template' => 'front-pg-ls-carousel',
		'path' => $path . '/templates',
	);
	$theme['cb_partners_list'] = array(
		'template' => 'cb-partners-list',
		'path' => $path . '/templates',
	);
	$theme['cb_custom_video_lists'] = array(
		'template' => 'cb-custom-video-lists',
		'path' => $path . '/templates',
	);
	$theme['learn_videos_two_col'] = array(
		'template' => 'learn-videos-two-col',
		'path' => $path . '/templates',
	);
	$theme['cb_partner_carousels'] = array(
		'template' => 'cb-partner-carousels',
		'path' => $path . '/templates',
	);
	$theme['cb_archive_two_col'] = array(
		'template' => 'cb-archive-two-col',
		'path' => $path . '/templates',
	);
	$theme['cb_social_media_menu'] = array(
		'template' => 'cb-social-media-menu',
		'path' => $path . '/templates',
	);
	$theme['cb_video_grid'] = array(
		'template' => 'cb-video-grid',
		'path' => $path . '/templates',
	);
	$theme['cb_pd_p_carousel'] = array(
		'template' => 'cb-pd-p-carousel',
		'path' => $path . '/templates',
	);
	$theme['cb_pd_p_all_series'] = array(
		'template' => 'cb-pd-p-all-series',
		'path' => $path . '/templates',
	);
	$theme['cb_genres_carousels'] = array(
		'template' => 'cb-genres-carousels',
		'path' => $path . '/templates',
	);
	$theme['cb_genres_show_series_carousels'] = array(
		'template' => 'cb-genres-show-series-carousels',
		'path' => $path . '/templates',
	);
  $theme['cb_show_air_dates'] = array(
		'template' => 'cb-show-air-dates',
		'path' => $path . '/templates',
	);
	return $theme;
}

/**
 * Implements hook_block_list_alter().
 */
function custom_block_block_list_alter(&$blocks) {
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $node = node_load(arg(1));
    // If node isn't a partner, disable this block.
    if ($node->type != 'partner') {
      unset($blocks[223]);
      unset($blocks[226]);
    }
    // Need to add code for if it's a views pg.
    //dpm($node);
    //dpm($blocks);
  }
}

/** 
 * Implements hook_entity_info_alter(). 
 * The first attribute in the array defines an arbitrary label for the view mode machine name.
 * 'custom settings' => TRUE displays the view mode as a default at the top of the display modes settings screen
 */
function custom_block_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes'] += array(
    'two_column_list' => array(
      'label' => t('Two Column List'),
      'custom settings' => FALSE,
    ), 
    'cm_show_meta' => array(
      'label' => t('Show Meta Data'),
      'custom settings' => FALSE,
    ),   
  );
}

/** 
 * Helper function to render a node in 'teaser' view mode.
 */
function custom_block_render_node_teaser($node) {
  $view = node_view($node, 'two_column_list');
  $node_rendered = drupal_render($view);
  
  return $node_rendered;
}

/**
* Truncates text.
*
* Cuts a string to the length of $length and replaces the last characters
* with the ending if the text is longer than length.
*
* ### Options:
*
* - `ending` Will be used as Ending and appended to the trimmed string
* - `exact` If false, $text will not be cut mid-word
* - `html` If true, HTML tags would be handled correctly
*
* @param string  $text String to truncate.
* @param integer $length Length of returned string, including ellipsis.
* @param array $options An array of html attributes and options.
* @return string Trimmed string.
* @access public
* @link http://book.cakephp.org/view/1469/Text#truncate-1625
*/
function custom_block_truncate($text, $length = 100, $options = array()) {
  $default = array(
      'ending' => '...', 'exact' => true, 'html' => false
  );
  $options = array_merge($default, $options);
  extract($options);

  if ($html) {
      if (mb_strlen(preg_replace('/<.*?>/', '', $text)) <= $length) {
          return $text;
      }
      $totalLength = mb_strlen(strip_tags($ending));
      $openTags = array();
      $truncate = '';

      preg_match_all('/(<\/?([\w+]+)[^>]*>)?([^<>]*)/', $text, $tags, PREG_SET_ORDER);
      foreach ($tags as $tag) {
          if (!preg_match('/img|br|input|hr|area|base|basefont|col|frame|isindex|link|meta|param/s', $tag[2])) {
              if (preg_match('/<[\w]+[^>]*>/s', $tag[0])) {
                  array_unshift($openTags, $tag[2]);
              } else if (preg_match('/<\/([\w]+)[^>]*>/s', $tag[0], $closeTag)) {
                  $pos = array_search($closeTag[1], $openTags);
                  if ($pos !== false) {
                      array_splice($openTags, $pos, 1);
                  }
              }
          }
          $truncate .= $tag[1];

          $contentLength = mb_strlen(preg_replace('/&[0-9a-z]{2,8};|&#[0-9]{1,7};|&#x[0-9a-f]{1,6};/i', ' ', $tag[3]));
          if ($contentLength + $totalLength > $length) {
              $left = $length - $totalLength;
              $entitiesLength = 0;
              if (preg_match_all('/&[0-9a-z]{2,8};|&#[0-9]{1,7};|&#x[0-9a-f]{1,6};/i', $tag[3], $entities, PREG_OFFSET_CAPTURE)) {
                  foreach ($entities[0] as $entity) {
                      if ($entity[1] + 1 - $entitiesLength <= $left) {
                          $left--;
                          $entitiesLength += mb_strlen($entity[0]);
                      } else {
                          break;
                      }
                  }
              }

              $truncate .= mb_substr($tag[3], 0 , $left + $entitiesLength);
              break;
          } else {
              $truncate .= $tag[3];
              $totalLength += $contentLength;
          }
          if ($totalLength >= $length) {
              break;
          }
      }
  } else {
      if (mb_strlen($text) <= $length) {
          return $text;
      } else {
          $truncate = mb_substr($text, 0, $length - mb_strlen($ending));
      }
  }
  if (!$exact) {
      $spacepos = mb_strrpos($truncate, ' ');
      if (isset($spacepos)) {
          if ($html) {
              $bits = mb_substr($truncate, $spacepos);
              preg_match_all('/<\/([a-z]+)>/', $bits, $droppedTags, PREG_SET_ORDER);
              if (!empty($droppedTags)) {
                  foreach ($droppedTags as $closingTag) {
                      if (!in_array($closingTag[1], $openTags)) {
                          array_unshift($openTags, $closingTag[1]);
                      }
                  }
              }
          }
          $truncate = mb_substr($truncate, 0, $spacepos);
      }
  }
  $truncate .= $ending;

  if ($html) {
      foreach ($openTags as $tag) {
          $truncate .= '</'.$tag.'>';
      }
  }

  return $truncate;
}

/**
 * Custom dpm_gettype() function.  
 * dpm() + variable/data type.
 */ 
function dpm_gettype($x) {
  dpm('--------------');
  dpm('type: ');
  dpm(gettype($x));
  dpm('--------------');
  dpm('data: ');
  dpm($x);
  dpm('--------------');
  return $x;
}


